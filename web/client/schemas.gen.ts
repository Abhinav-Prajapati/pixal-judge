// This file is auto-generated by @hey-api/openapi-ts

export const BatchAnalyzeSchema = {
  properties: {
    min_cluster_size: {
      type: "integer",
      title: "Min Cluster Size",
      default: 5,
    },
    min_samples: {
      type: "integer",
      title: "Min Samples",
      default: 5,
    },
    metric: {
      type: "string",
      title: "Metric",
      default: "cosine",
    },
  },
  type: "object",
  title: "BatchAnalyze",
  description: "Schema for the analysis request using HDBSCAN parameters.",
} as const;

export const BatchCreateSchema = {
  properties: {
    name: {
      type: "string",
      title: "Name",
    },
    image_ids: {
      items: {
        type: "integer",
      },
      type: "array",
      title: "Image Ids",
    },
  },
  type: "object",
  required: ["name", "image_ids"],
  title: "BatchCreate",
  description: "Schema for the initial creation of a batch.",
} as const;

export const BatchGroupUpdateSchema = {
  properties: {
    group_map: {
      additionalProperties: {
        items: {
          type: "integer",
        },
        type: "array",
      },
      type: "object",
      title: "Group Map",
    },
  },
  type: "object",
  required: ["group_map"],
  title: "BatchGroupUpdate",
  description: "Schema for manually updating a batch's group map.",
} as const;

export const BatchRenameSchema = {
  properties: {
    name: {
      type: "string",
      title: "Name",
    },
  },
  type: "object",
  required: ["name"],
  title: "BatchRename",
  description: "Schema for renaming a batch.",
} as const;

export const BatchResponseSchema = {
  properties: {
    id: {
      type: "integer",
      title: "Id",
    },
    batch_name: {
      type: "string",
      title: "Batch Name",
    },
    status: {
      type: "string",
      title: "Status",
    },
    parameters: {
      anyOf: [
        {
          additionalProperties: true,
          type: "object",
        },
        {
          type: "null",
        },
      ],
      title: "Parameters",
    },
    image_associations: {
      items: {
        $ref: "#/components/schemas/GroupAssociationResponse",
      },
      type: "array",
      title: "Image Associations",
    },
  },
  type: "object",
  required: ["id", "batch_name", "status", "parameters", "image_associations"],
  title: "BatchResponse",
  description: "Schema for returning full batch details.",
} as const;

export const BatchUpdateImagesSchema = {
  properties: {
    image_ids: {
      items: {
        type: "integer",
      },
      type: "array",
      title: "Image Ids",
    },
  },
  type: "object",
  required: ["image_ids"],
  title: "BatchUpdateImages",
  description: "Schema for adding/removing images from a batch.",
} as const;

export const Body_uploadAndAddImagesToBatchSchema = {
  properties: {
    files: {
      items: {
        type: "string",
        format: "binary",
      },
      type: "array",
      title: "Files",
    },
  },
  type: "object",
  required: ["files"],
  title: "Body_uploadAndAddImagesToBatch",
} as const;

export const Body_uploadImagesSchema = {
  properties: {
    files: {
      items: {
        type: "string",
        format: "binary",
      },
      type: "array",
      title: "Files",
    },
  },
  type: "object",
  required: ["files"],
  title: "Body_uploadImages",
} as const;

export const GroupAssociationResponseSchema = {
  properties: {
    image: {
      $ref: "#/components/schemas/ImageResponse",
    },
    group_label: {
      anyOf: [
        {
          type: "string",
        },
        {
          type: "null",
        },
      ],
      title: "Group Label",
    },
  },
  type: "object",
  required: ["image", "group_label"],
  title: "GroupAssociationResponse",
  description:
    "Schema for an image's association within a batch, including its group.",
} as const;

export const HTTPValidationErrorSchema = {
  properties: {
    detail: {
      items: {
        $ref: "#/components/schemas/ValidationError",
      },
      type: "array",
      title: "Detail",
    },
  },
  type: "object",
  title: "HTTPValidationError",
} as const;

export const ImageResponseSchema = {
  properties: {
    id: {
      type: "integer",
      title: "Id",
    },
    filename: {
      type: "string",
      title: "Filename",
    },
    original_filename: {
      type: "string",
      title: "Original Filename",
    },
    file_path: {
      type: "string",
      title: "File Path",
    },
    has_thumbnail: {
      type: "boolean",
      title: "Has Thumbnail",
    },
    is_duplicate: {
      type: "boolean",
      title: "Is Duplicate",
      default: false,
    },
    message: {
      anyOf: [
        {
          type: "string",
        },
        {
          type: "null",
        },
      ],
      title: "Message",
    },
  },
  type: "object",
  required: [
    "id",
    "filename",
    "original_filename",
    "file_path",
    "has_thumbnail",
  ],
  title: "ImageResponse",
  description: "Schema for returning image details. This model is unchanged.",
} as const;

export const ValidationErrorSchema = {
  properties: {
    loc: {
      items: {
        anyOf: [
          {
            type: "string",
          },
          {
            type: "integer",
          },
        ],
      },
      type: "array",
      title: "Location",
    },
    msg: {
      type: "string",
      title: "Message",
    },
    type: {
      type: "string",
      title: "Error Type",
    },
  },
  type: "object",
  required: ["loc", "msg", "type"],
  title: "ValidationError",
} as const;
